import arcade
import random

Width = 1200
Height = 800

# button stuff
BTN_X = 0
BTN_Y = 1
BTN_WIDTH = 2
BTN_HEIGHT = 3
BTN_IS_CLICKED = 4
BTN_COLOR = 5
BTN_CLICKED_COLOUR = 6

# current screens
current_screen = "menu"
instruction_button = [Width - 800, Height - 500, 373, 100, False,
                      arcade.color.GRAY]
game_button = [Width - 800, Height - 700, 383, 100,
               False, arcade.color.BLUE]

# buttons
button_1 = [Width - 1000, Height - 100, 100, 100, False, arcade.color.BLUE, arcade.color.RED]

# zombie moving
zombie_x_positions = [1200, 1200, 1200, 1200, 1200, 1200, 1200,
                      1200, 1200, 1200, 1200]
zombie_y_positions = [130, 250, 450, 230, 13, 100,
                      52, 340, 259, 636, 547]


def setup():
    arcade.open_window(Width, Height, "My Arcade Game")
    arcade.set_background_color(arcade.color.WHITE)
    arcade.schedule(update, 1 / 60)

    window = arcade.get_window()
    window.on_draw = on_draw
    window.on_key_press = on_key_press
    window.on_key_release = on_key_release
    window.on_mouse_press = on_mouse_press
    window.on_mouse_release = on_mouse_release

    arcade.run()


def update(delta_time):
    for index in range(len(zombie_x_positions)):
        zombie_x_positions[index] -= 15

    if zombie_x_positions[index] <= 0:
        zombie_x_positions[index] = random.randrange(Width, Width + 150)
        zombie_x_positions[index] = random.randrange(0, Height - 100)


def on_draw():
    arcade.start_render()

    # menu
    if current_screen == "menu":
        arcade.set_background_color(arcade.color.GREEN)
        arcade.draw_text("Pants VS Zombies", Width / 2, Height
                         - 100, arcade.color.BLACK, font_size=30,
                         anchor_x="center")
        draw_button(instruction_button)
        draw_game_button(game_button)
        arcade.draw_text("Instructions", Width - 525, Height - 450, arcade.color.BLACK, font_size=30, anchor_x="center")
        arcade.draw_text("Play", Width - 600, Height - 700, arcade.color.BLACK, font_size=30, anchor_x="center")
    # instructions
    if current_screen == "Instructions":
        arcade.set_background_color(arcade.color.GRAY)
        arcade.draw_text("Instructions", Width / 2, Height - 100, arcade.color.BLACK, font_size=30, anchor_x="center")
        draw_instructions("instructions")
        arcade.draw_text("Esc to go to Menu", Width - 1000, Height - 700, arcade.color.BLACK, font_size=30,
                         anchor_x="center")
    if current_screen == "Game":
        # zombies
        for c, d in zip(zombie_x_positions, zombie_y_positions):
            arcade.draw_circle_filled(c, d, 30, arcade.color.BLUE)
        draw_button(button_1)


def on_key_press(key, modifiers):
    global current_screen

    if current_screen == "Instructions":
        if key == arcade.key.ESCAPE:
            current_screen = "menu"
    elif current_screen == "Game":
        if key == arcade.key.ESCAPE:
            current_screen = "menu"


def on_key_release(key, modifiers):
    pass


def on_mouse_press(x, y, button, modifiers):
    print(f"Click at ({x}, {y})")
    global current_screen

    # menu screen
    if mouse_hover(x, y, instruction_button):
        instruction_button[BTN_IS_CLICKED] = True
        current_screen = "Instructions"

    elif mouse_hover(x, y, game_button):
        game_button[BTN_IS_CLICKED] = True
        current_screen = "Game"

    # game screen
    elif mouse_hover(x, y, button_1):
        button_1[BTN_IS_CLICKED] = True


def mouse_drag(x, y, button, modifiers):
    if on_mouse_press(x, y, button_1, modifiers):
    

def on_mouse_release(x, y, button, modifiers):
    instruction_button[BTN_IS_CLICKED] = False
    game_button[BTN_IS_CLICKED] = False
    button_1[BTN_IS_CLICKED] = False


def mouse_hover(x, y, button) -> bool:
    if (x > button[BTN_X] and x < button[BTN_X] + button[BTN_WIDTH] and y > button[BTN_Y]
        and y < button[BTN_Y] + button[BTN_HEIGHT]):
        return True
    else:
        return False


def draw_button(button_1):
    arcade.draw_xywh_rectangle_filled(button_1[BTN_X],
                                      button_1[BTN_Y],
                                      button_1[BTN_WIDTH],
                                      button_1[BTN_HEIGHT],
                                      button_1[BTN_COLOR])


def draw_instruction_button(instruction_button):
    arcade.draw_xywh_rectangle_filled(instruction_button[BTN_X],
                                      instruction_button[BTN_Y],
                                      instruction_button[BTN_WIDTH],
                                      instruction_button[BTN_HEIGHT],
                                      instruction_button[BTN_COLOR])


def draw_game_button(game_button):
    if button_1[BTN_IS_CLICKED]:
        color = [BTN_CLICKED_COLOUR]
    else:
        color = [BTN_COLOR]
    arcade.draw_xywh_rectangle_filled(game_button[BTN_X],
                                      game_button[BTN_Y],
                                      game_button[BTN_WIDTH],
                                      game_button[BTN_HEIGHT],
                                      game_button[BTN_COLOR])


def draw_instructions(instructions):
    arcade.draw_text("1. Collect fabric to make plants.", 200, 700, arcade.color.BLACK, font_size=15, width=0)
    arcade.draw_text("2. Plant the pants on the yard.", 200, 600, arcade.color.BLACK, font_size=12, width=0)
    arcade.draw_text("3. As the zombies keep coming, plant more pants.", 200, 500, arcade.color.BLACK, font_size=12,
                     width=0)
    arcade.draw_text("4. Repeat step 2 and 3.", 200, 400, arcade.color.BLACK, font_size=12, width=0)
    arcade.draw_text("5. Clean it up afterwards.", 200, 300, arcade.color.BLACK, font_size=12, width=0)


if __name__ == '__main__':
    setup()
